
@prefix bfo:  <http://purl.obolibrary.org/obo/BFO_> .
@prefix dct:  <http://purl.org/dc/terms/> .
@prefix iao:  <http://purl.obolibrary.org/obo/IAO_> .
@prefix onto: <https://techcoop.com.br/ontomi#> .
@prefix owl:  <http://www.w3.org/2002/07/owl#> .
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh:   <http://www.w3.org/ns/shacl#> .
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .

#################################################################
# OntoMI — SHACL Shapes (v1.2.0)
# Option B (ABox‑light): aceita IAO:is about apontando para
# - instância de onto:IntelligenceDisposition; OU
# - IRI de classe que seja subclasse direta de onto:IntelligenceDisposition.
#
# Também valida:
# - tipo da ativação em {Primary, Secondary}
# - score em [0,1]
# - coerência entre hasPrimaryActivation/hasSecondaryActivation e o tipo
#################################################################

<#ShapeGraph> a owl:Ontology ;
  dct:title "OntoMI SHACL Shapes"@en ;
  dct:description "Shapes para validação de instâncias OntoMI (ABox‑light)."@pt ;
  dct:creator "Jefferson Rodrigo Speck" ;
  dct:license <https://creativecommons.org/licenses/by/4.0/> ;
  dct:modified "2025-10-29"^^xsd:date .

#################################################################
# 1) (Advisory) Não instanciar ExplanationElement diretamente
#################################################################
onto:ExplanationElementAdvisoryShape a sh:NodeShape ;
  sh:targetClass onto:ExplanationElement ;
  sh:severity sh:Warning ;
  sh:message "Instanciação direta de ExplanationElement não recomendada; use Keyword, ContextObject ou DiscursiveStrategy."@pt .

#################################################################
# 2) ExplanationFragment precisa de usesElement OU hasActivation
#################################################################
onto:ExplanationFragmentShape a sh:NodeShape ;
  sh:targetClass onto:ExplanationFragment ;
  sh:message "ExplanationFragment deve possuir pelo menos uma ligação semântica (usesElement) ou uma ativação (hasActivation)."@pt ;
  sh:or (
    [ sh:property [ sh:path onto:usesElement   ; sh:minCount 1 ] ]
    [ sh:property [ sh:path onto:hasActivation ; sh:minCount 1 ] ]
  ) .

#################################################################
# 3) IntelligenceActivation Shape
#################################################################
onto:IntelligenceActivationShape a sh:NodeShape ;
  sh:targetClass onto:IntelligenceActivation ;

  # (a) Deve apontar para ao menos 1 IntelligenceDisposition via IAO:is about
  sh:property [
    sh:path iao:0000136 ;
    sh:qualifiedValueShape [
      # Opção B: aceitar (i) instância OU (ii) IRI de classe subclasse de IntelligenceDisposition
      sh:or (
        [ sh:class onto:IntelligenceDisposition ]                                # instância
        [ sh:nodeKind sh:IRI ;                                                   # classe (IRI)
          sh:property [ sh:path rdfs:subClassOf ; sh:hasValue onto:IntelligenceDisposition ]
        ]
      )
    ] ;
    sh:qualifiedMinCount 1 ;
    sh:message "IntelligenceActivation deve apontar para uma IntelligenceDisposition (instância) ou para classe subclasse de IntelligenceDisposition via iao:is about."@pt
  ] ;

  # (b) Tipo obrigatório em {Primary, Secondary}
  sh:property [
    sh:path onto:hasActivationType ;
    sh:minCount 1 ;
    sh:in ( onto:Primary onto:Secondary ) ;
    sh:message "IntelligenceActivation deve possuir um tipo válido (primária/secundária)."@pt
  ] ;

  # (c) Score em [0,1] (xsd:decimal)
  sh:property [
    sh:path onto:hasActivationScore ;
    sh:datatype xsd:decimal ;
    sh:minInclusive 0.0 ;
    sh:maxInclusive 1.0 ;
    sh:message "Scores de ativação devem estar em [0,1]."@pt
  ] ;

  # (d) Coerência: se fragmento liga via hasPrimaryActivation => tipo Primary
  sh:sparql [
    sh:message "Ativação ligada por hasPrimaryActivation deve ter tipo Primary."@pt ;
    sh:select """
      SELECT ?this WHERE {
        ?frag onto:hasPrimaryActivation ?this .
        FILTER NOT EXISTS { ?this onto:hasActivationType onto:Primary }
      }
    """
  ] ;

  # (e) Coerência: se fragmento liga via hasSecondaryActivation => tipo Secondary
  sh:sparql [
    sh:message "Ativação ligada por hasSecondaryActivation deve ter tipo Secondary."@pt ;
    sh:select """
      SELECT ?this WHERE {
        ?frag onto:hasSecondaryActivation ?this .
        FILTER NOT EXISTS { ?this onto:hasActivationType onto:Secondary }
      }
    """
  ] .
